name: ebikeapp

services:
  registry:
    build:
      context: ./registry
      dockerfile: docker-maven/Dockerfile
    image: registry
    container_name: registry-01
    networks:
      - ebikapp_network
    ports:
      - "9000:9000"
    expose: 
      - 9000
    healthcheck:
      test: curl --fail http://registry:9000/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - REGISTRY_URL=http://registry:9000
      - KAFKA_BROKER_URL=kafka:9092

  users:
    build:
      context: ./users-manager
      dockerfile: docker-maven/Dockerfile
    image: users
    container_name: my-users
    depends_on:
      - registry
    networks:
      - ebikapp_network
    ports:
      - "9100:9100"
    expose: 
      - 9100
    healthcheck:
      test: curl --fail http://users:9100/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - REGISTRY_URL=http://registry:9000
      - USERS_URL=http://users:9100
      - KAFKA_BROKER_URL=kafka:9092

  ebikes:
    build:
      context: ./ebikes-manager
      dockerfile: docker-maven/Dockerfile
    image: ebikes
    container_name: my-ebikes
    depends_on:
      - registry
    networks:
      - ebikapp_network
    ports:
      - "9200:9200"
    expose: 
      - 9200
    healthcheck:
      test: curl --fail http://ebikes:9200/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - REGISTRY_URL=http://registry:9000
      - EBIKES_URL=http://ebikes:9200
      - KAFKA_BROKER_URL=kafka:9092

  apigateway:
    build:
      context: ./apigateway
      dockerfile: docker-maven/Dockerfile
    image: apigateway
    container_name: my-apigateway
    networks:
      - ebikapp_network
    ports:
      - "10000:10000"
    expose: 
      - 10000
    healthcheck:
      test: curl --fail http://apigateway:10000/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - REGISTRY_URL=http://registry:9000
      - USERS_URL=http://users:9100
      - EBIKES_URL=http://ebikes:9200
      - APIGATEWAY_URL=http://apigateway:10000
      - RIDES_URL=http://rides:9300
      - KAFKA_BROKER_URL=kafka:9092

  rides:
    build:
      context: ./rides-manager
      dockerfile: docker-maven/Dockerfile
    image: rides
    container_name: my-rides
    depends_on:
      - apigateway
      - registry
      - users
      - ebikes
    networks:
      - ebikapp_network
    ports:
      - "9300:9300"
    expose: 
      - 9300
    healthcheck:
      test: curl --fail http://rides:9300/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - REGISTRY_URL=http://registry:9000
      - USERS_URL=http://users:9100
      - EBIKES_URL=http://ebikes:9200
      - RIDES_URL=http://rides:9300
      - KAFKA_BROKER_URL=kafka:9092
    command: >
      sh -c "
      sleep 40;
      mvn exec:java -Dexec.mainClass=sap.ass2.rides.RidesManagerLauncher"
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    networks:
      - ebikapp_network
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
      - apigateway
      - registry
      - users
      - ebikes
    networks:
      - ebikapp_network
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    command: >
      bash -c "
        /etc/confluent/docker/run &
        sleep 50 &&
        kafka-topics --create --topic ebike-events --if-not-exists --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 &&
        kafka-topics --create --topic user-events --if-not-exists --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 &&
        kafka-topics --create --topic ride-events --if-not-exists --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 &&
        sleep infinity
      "

networks:
  ebikapp_network: